[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cookbook to use common bioinformatic software",
    "section": "",
    "text": "This is a cook book that explains the usage, and available options of key bioinformatic tools."
  },
  {
    "objectID": "Annotating_genomes.html",
    "href": "Annotating_genomes.html",
    "title": "1  Tools for genome annotations",
    "section": "",
    "text": "hmmsearch is used to search one or more profiles against a sequence database. For each profile in , use that query profile to search the target database of sequences in , and output ranked lists of the sequences with the most significant matches to the profile.\n\n-o  Direct the main human-readable output to a file  instead of the default stdout. Careful, file becomes large\n–tblout: Save a simple tabular (space-delimited) file summarizing the per-target output, with one data line per homologous target sequence found.\n–domtblout Save a simple tabular (space-delimited) file summarizing the per-domain output, with one data line per homologousdomain detected in a query sequence for each homologous model.\n\nAvailable databases:\n\n/export/lv1/user/spang_team/Databases/arCOGs2019/All_Arcogs_2018.hmm\n\n\n#example usage for an acrog search\nhmmsearch --tblout output/sequence_results.txt -o output/results_all.txt --domtblout output/domain_results.txt --notextw --cpu 100 /export/lv1/user/spang_team/Databases/arCOGs2019/All_Arcogs_2018.hmm Genomes.faa\n\n\n\n\n\n#format the full table and only select sequences above a certain evalue\nsed 's/ \\+ /\\t/g' output/sequence_results.txt | sed '/^#/d'| sed 's/ /\\t/g'| awk -F'\\t' -v OFS='\\t' '{print $1, $3, $6, $5}' | awk -F'\\t' -v OFS='\\t' '($4 + 0) <= 1E-3'  > output/sequence_results_red_e_cutoff.txt\n\n#get best hit based on bit score, and then evalue\nsort -t$'\\t' -k3,3gr -k4,4g KOs_hmmer_raw/sequence_results_red_e_cutoff.txt | sort -t$'\\t' --stable -u -k1,1  | sort -t$'\\t' -k3,3gr -k4,4g >  KOs_hmmer_raw/All_KO_hmm.txt"
  },
  {
    "objectID": "Sequence_manipulation.html",
    "href": "Sequence_manipulation.html",
    "title": "2  Tools for sequence manipulation",
    "section": "",
    "text": "Takes a bed file as input and extract that region from a multiple sequence fasta file.\nExample for the .bed input file: AP024486.1_BCS91053.1 175 392 arCOG03214.1 182.5\nExample for the output file: >AP024486.1_BCS91053.1:175-392 DFIETWLKALDIVDKFGELKKTEYNIDQKEVFLLTSVIRDTTNVNIPEWLPISKSDLIQYNKEFFDINKPEGVDYTYGERLFNYAFNDKIYDQIDYIKAKLKESSYTRRAVAVTWNLEKDQSSSNPPCLIAVQYLIKFNKLYLYALFRSHDIYGAWILNAYALIMLQHRVAEQLNIKPGAIAINSVSAHIYKNNFQRVKDILDKYYRNKQEPFVIDE\n\nbedtools getfasta -fi All_Genomes.faa -bed to_extract.bed  > extracted_proteins.fasta\n\n\n\n\nbedtools subtract bedtools` subtract searches for features in B that overlap A by at least the number of base pairs given by the -f option. If an overlapping feature is found in B, the overlapping portion is removed from A and the remaining portion of A is reported. If a feature in B overlaps all of a feature in A, the A feature will not be reported. If a feature in B does not overlap a feature in A by at least the -f amount, the A feature will be reported in its entirety.\n\nbedtools subtract [OPTIONS] -a fileA.bed -b fileB.bed"
  },
  {
    "objectID": "Phylogenies.html",
    "href": "Phylogenies.html",
    "title": "3  Tools for phylogenetic analyses",
    "section": "",
    "text": "#less than 1000 seqs\nmafft-linsi --reorder --thread 4  Input.faa > Input.aln\n\n#more than 1000 seqs\nmafft --reorder --thread 4  Input.faa > Input.aln"
  }
]